<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <script src="/js/tailwindcss.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Tabela de usuários</title>
</head>

<body>
      <div class="w-full sm:px-0">
          <div class="px-4 md:px-10 py-4 md:py-7 bg-gray-100 dark:bg-gray-700 rounded-tl-lg rounded-tr-lg">
              <div class="sm:flex items-center justify-between">
                  <p tabindex="0" class="focus:outline-none text-base sm:text-lg md:text-xl lg:text-2xl font-bold leading-normal text-gray-800 dark:text-white ">Informações de Usuários</p>
              </div>
          </div>
          
          <div class="bg-white dark:bg-gray-800  shadow px-4 md:px-10 pt-4 md:pt-7 pb-5 overflow-y-auto">
            <div>
                <div class="topnav">
                    <div class="search-container">
                        <input type="text" placeholder="Pesuise alguma coisa.." name="pesquisa" id="search" onkeyup="funcSearch()">
                        <!-- <button type="submit">Pesquisar</button> -->
                    </div>
                  </div>
            </div>
              <table class="w-full whitespace-nowrap" id="tabelaPesquisa">
                  <thead>
                      <tr tabindex="0" class="focus:outline-none h-16 w-full text-sm leading-none text-gray-800 dark:text-white ">

                          <th class="font-normal text-center pl-20">Nome</th>
                          <th class="font-normal text-center pl-20">Completado</th>
                          <th class="font-normal text-center pl-20">Detalhes</th>

                      </tr>
                  </thead>
                  <tbody class="w-full" id="tabela">
                      
                    <% for (const item in api) { %>
                        <tr tabindex="0" id="linha" class="focus:outline-none h-20 text-sm leading-none text-gray-800 dark:text-white  bg-white dark:bg-gray-800  hover:bg-gray-100 dark:hover:bg-gray-900  border-b border-t border-gray-100 dark:border-gray-700 ">
                        <%# console.log(api[item]['title'])%>
                            <td class="pl-20 text-center">
                                <p class="font-medium"><%= api[item]['title']%></p>
                            </td>
                            <td class="pl-20 text-center">
                              <input type="checkbox" class="font-medium checkmark"
                              <% if(api[item]['completed'] == true){%>
                                <%= 'checked'%>
                                <%}%>
                              >
                            </td>
                            <td class="pl-20 text-center">
                              <input class="btn-details icon-details" type="button"
                               onclick="alertInfo(this)"
                                id="<%= api[item]['id']%>"
                                 name="<%= api[item]['userId']%>">
                          </td>
                        
                        </tr>
                    <%}%>
                      
                  </tbody>
              </table>
          </div>
      </div>
      
      <script>
          function dropdownFunction(element) {
              var dropdowns = document.getElementsByClassName("dropdown-content");
              var i;
              let list = element.parentElement.parentElement.getElementsByClassName("dropdown-content")[0];
              list.classList.add("target");
              for (i = 0; i < dropdowns.length; i++) {
                  if (!dropdowns[i].classList.contains("target")) {
                      dropdowns[i].classList.add("hidden");
                  }
              }
              list.classList.toggle("hidden");
          }
      </script>
  
<!-- Code injected by live-server -->
<script type="text/javascript">
  // <![CDATA[  <-- For SVG support
  if ('WebSocket' in window) {
      (function () {
          function refreshCSS() {
              var sheets = [].slice.call(document.getElementsByTagName("link"));
              var head = document.getElementsByTagName("head")[0];
              for (var i = 0; i < sheets.length; ++i) {
                  var elem = sheets[i];
                  var parent = elem.parentElement || head;
                  parent.removeChild(elem);
                  var rel = elem.rel;
                  if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
                      var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
                      elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
                  }
                  parent.appendChild(elem);
              }
          }
          var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
          var address = protocol + window.location.host + window.location.pathname + '/ws';
          var socket = new WebSocket(address);
          socket.onmessage = function (msg) {
              if (msg.data == 'reload') window.location.reload();
              else if (msg.data == 'refreshcss') refreshCSS();
          };
          if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
              console.log('Live reload enabled.');
              sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
          }
      })();
  }
  else {
      console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
  }
  // ]]>
</script>
<!-- Code injected by live-server -->
<script type="text/javascript">
  // <![CDATA[  <-- For SVG support
  if ('WebSocket' in window) {
      (function () {
          function refreshCSS() {
              var sheets = [].slice.call(document.getElementsByTagName("link"));
              var head = document.getElementsByTagName("head")[0];
              for (var i = 0; i < sheets.length; ++i) {
                  var elem = sheets[i];
                  var parent = elem.parentElement || head;
                  parent.removeChild(elem);
                  var rel = elem.rel;
                  if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
                      var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
                      elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
                  }
                  parent.appendChild(elem);
              }
          }
          var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
          var address = protocol + window.location.host + window.location.pathname + '/ws';
          var socket = new WebSocket(address);
          socket.onmessage = function (msg) {
              if (msg.data == 'reload') window.location.reload();
              else if (msg.data == 'refreshcss') refreshCSS();
          };
          if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
              console.log('Live reload enabled.');
              sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
          }
      })();
  }
  else {
      console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
  }
  // ]]>
</script>

<script>
async function alertInfo(element) {
    const id = element.id;
    const userId = element.name;
    Swal.fire(`ID: ${id}\nUserID: ${userId}`);
}
</script>

<script>
    function funcSearch() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("search");
        filter = input.value.toUpperCase();
        table = document.getElementById("tabelaPesquisa");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[0];
        if (td) {
        txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
        } else {
            tr[i].style.display = "none";
      }
    }       
  }
}
    </script>

</body>
</html>